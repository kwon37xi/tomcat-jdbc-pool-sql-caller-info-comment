plugins {
    id 'java'
}

apply plugin: 'maven'
apply plugin: 'jacoco'

ext {
    javaVersion = '1.8'
    slf4jVersion = '1.7.0'
}

project.group = 'in.woowa'
project.version = '0.7'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {

    compile group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion
    compileOnly group: 'org.apache.tomcat', name: 'tomcat-jdbc', version: '8.0.52'

    testCompile 'junit:junit:4.12'
    testCompile("org.assertj:assertj-core:3.9.1")

    testCompile group: 'org.apache.tomcat', name: 'tomcat-jdbc', version: '8.0.52'
    testCompile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.0'
    testCompile group: 'com.h2database', name: 'h2', version: '1.4.197'
    testCompile group: 'mysql', name: 'mysql-connector-java', version: '6.0.6'
    testCompile 'com.microsoft.sqlserver:mssql-jdbc:6.1.0.jre8'

    testCompile "org.slf4j:jul-to-slf4j:${slf4jVersion}"
    testCompile "org.slf4j:jcl-over-slf4j:${slf4jVersion}"
    testCompile "org.slf4j:log4j-over-slf4j:${slf4jVersion}"
    testCompile "org.slf4j:jul-to-slf4j:${slf4jVersion}"
}

targetCompatibility = javaVersion
sourceCompatibility = javaVersion

[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

// 소스와 JavaDoc 배포를 위한 작업
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

jacoco {
    toolVersion = "0.8.0"
}

test {
    reports {
        junitXml.enabled = true
        html.enabled = true
        ignoreFailures = true
    }
    jacoco {
        enabled = true
        destinationFile = file("${buildDir}/jacoco/jacoco.exec")
    }
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/reports/jacoco/html")
    }
    executionData = files("${buildDir}/jacoco/jacoco.exec")
}
